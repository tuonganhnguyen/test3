<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                            http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                            http://www.springframework.org/schema/security
                            http://www.springframework.org/schema/security/spring-security-4.0.xsd">
    <global-method-security >
    </global-method-security>
    <http auto-config="false" entry-point-ref="loginUrlAuthenticationEntryPoint">
<!--     <http auto-config="false"> -->
        <intercept-url pattern="/employees/*" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/" access="permitAll()" />
        
        <custom-filter position="FORM_LOGIN_FILTER" ref="customAuthenticationFilter" />
        <custom-filter before="FORM_LOGIN_FILTER" ref="openAMTokenValidationFilter" />
        <custom-filter position="LOGOUT_FILTER" ref="customlogoutFilter"/>
<!--         <custom-filter ref="authenticationProcessingFilter" before="FORM_LOGIN_FILTER"/> -->
<!--         <form-login login-page="/welcome" password-parameter="pass" username-parameter="user" login-processing-url="/login" default-target-url="/employees/english" authentication-success-handler-ref="successHandler" /> -->
<!--         <csrf disabled="false" token-repository-ref="" /> -->
<!--         <csrf disabled="false" token-repository-ref="httpSessionTokenRepository" request-matcher-ref=""/> -->
        <csrf disabled="true"/>
<!--         <logout logout-url="/logout" logout-success-url="/welcome"/> -->
<!--         <logout logout-url="/logout" logout-success-url="/welcome"/> -->
<!--         <custom-filter ref=""  /> -->
    </http>
    
<!--     <beans:bean id="customAuthenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"> -->
     <beans:bean id="customAuthenticationFilter" class="security.filters.CustomUsernamePasswordAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="authenticationFailureHandler" ref="failureHandler"/>
        <beans:property name="authenticationSuccessHandler" ref="successHandler"/>
    </beans:bean>
    <beans:bean id="openAMTokenValidationFilter" class="security.filters.OpenAMTokenValidationFilter"/>
    <beans:bean id="customlogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <beans:property name="filterProcessesUrl" value="/logout"/>
        <beans:constructor-arg index="0" value="/"/>
        <beans:constructor-arg index="1">
        <beans:list>
            <beans:ref bean="customSecurityContextLogoutHandler"/>
        </beans:list>
        </beans:constructor-arg>
    </beans:bean>
    
    <beans:bean id="successHandler" class="security.CustomAuthenticationSuccessHandler"/>
    <beans:bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
        <beans:property name="defaultFailureUrl" value="/error"/>
    </beans:bean>
    <beans:bean id="customSecurityContextLogoutHandler" class="security.CustomSecurityContextLogoutHandler"/>
    
    
<!--     <beans:bean id="authenticationProcessingFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"> -->
<!--         <beans:property name="authenticationManager" ref="authenticationManager"/> -->
<!--         <beans:property name="authenticationDetailsSource"> -->
<!--             <beans:bean class="org.springframework.security.authentication.AuthenticationDetailsSourceImpl"> -->
<!--                 <beans:property name="clazz" value="security.CustomWebAuthenticationDetails"/> -->
<!--             </beans:bean> -->
<!--         </beans:property> -->
<!--     </beans:bean> -->
   
<!--     <beans:bean id="httpSessionTokenRepository" class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository"> -->
<!--     </beans:bean> -->
    
<!--     <beans:bean id="memoryTokenRepository" class="org.springframework.security.web.authentication.rememberme.InMemoryTokenRepositoryImpl"> -->
<!--     </beans:bean> -->

    <beans:bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:constructor-arg name="loginFormUrl" value="/welcome"></beans:constructor-arg>
<!--         <beans:property name="loginFormUrl" value="/login"/> -->
    </beans:bean>
    
    
    
    
 
    
    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="customAuthenticationProvider"/>
    </authentication-manager> 
    
    <beans:bean id="customAuthenticationProvider" class="security.CustomAuthenticationProvider"/>

</beans:beans>